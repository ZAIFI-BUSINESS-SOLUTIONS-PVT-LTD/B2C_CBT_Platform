# Generated by Django 5.2.4 on 2025-08-25 11:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("neet_app", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="StudentInsight",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("strength_topics", models.JSONField(blank=True, default=list)),
                ("weak_topics", models.JSONField(blank=True, default=list)),
                ("improvement_topics", models.JSONField(blank=True, default=list)),
                ("unattempted_topics", models.JSONField(blank=True, default=list)),
                ("last_test_topics", models.JSONField(blank=True, default=list)),
                ("llm_strengths", models.JSONField(blank=True, default=dict)),
                ("llm_weaknesses", models.JSONField(blank=True, default=dict)),
                ("llm_study_plan", models.JSONField(blank=True, default=dict)),
                ("llm_last_test_feedback", models.JSONField(blank=True, default=dict)),
                ("thresholds_used", models.JSONField(blank=True, default=dict)),
                ("summary", models.JSONField(blank=True, default=dict)),
                (
                    "insight_type",
                    models.CharField(blank=True, default="overall", max_length=20),
                ),
            ],
            options={
                "verbose_name": "Student Insight",
                "verbose_name_plural": "Student Insights",
                "db_table": "student_insights",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="testanswer",
            name="visit_count",
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name="testsession",
            name="test_type",
            field=models.CharField(
                choices=[("custom", "Custom Test"), ("platform", "Platform Test")],
                default="custom",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="PlatformTest",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("test_name", models.TextField()),
                ("test_code", models.CharField(max_length=50, unique=True)),
                ("test_year", models.IntegerField(blank=True, null=True)),
                ("test_type", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("instructions", models.TextField(blank=True, null=True)),
                ("time_limit", models.IntegerField()),
                ("total_questions", models.IntegerField()),
                ("selected_topics", models.JSONField()),
                ("question_distribution", models.JSONField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Platform Test",
                "verbose_name_plural": "Platform Tests",
                "db_table": "platform_tests",
                "indexes": [
                    models.Index(
                        fields=["test_code"], name="platform_te_test_co_672a34_idx"
                    ),
                    models.Index(
                        fields=["test_year", "test_type"],
                        name="platform_te_test_ye_5394fc_idx",
                    ),
                    models.Index(
                        fields=["is_active", "created_at"],
                        name="platform_te_is_acti_806a9a_idx",
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="testsession",
            name="platform_test",
            field=models.ForeignKey(
                blank=True,
                db_column="platform_test_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="neet_app.platformtest",
            ),
        ),
        migrations.AddIndex(
            model_name="testsession",
            index=models.Index(
                fields=["test_type", "start_time"],
                name="test_sessio_test_ty_f37d55_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="testsession",
            index=models.Index(
                fields=["platform_test", "start_time"],
                name="test_sessio_platfor_7758b6_idx",
            ),
        ),
        migrations.AddField(
            model_name="studentinsight",
            name="student",
            field=models.ForeignKey(
                db_column="student_id",
                on_delete=django.db.models.deletion.CASCADE,
                to="neet_app.studentprofile",
            ),
        ),
        migrations.AddField(
            model_name="studentinsight",
            name="test_session",
            field=models.ForeignKey(
                blank=True,
                db_column="test_session_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="neet_app.testsession",
            ),
        ),
        migrations.AddIndex(
            model_name="studentinsight",
            index=models.Index(
                fields=["student", "created_at"], name="student_ins_student_92a005_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentinsight",
            index=models.Index(
                fields=["test_session", "created_at"],
                name="student_ins_test_se_1cea92_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studentinsight",
            index=models.Index(
                fields=["insight_type", "created_at"],
                name="student_ins_insight_35e0da_idx",
            ),
        ),
    ]
