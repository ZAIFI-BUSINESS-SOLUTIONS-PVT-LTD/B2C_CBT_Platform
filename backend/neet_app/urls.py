# backend/neet_app/urls.py
from django.contrib import admin
from django.urls import path, include
from rest_framework.routers import DefaultRouter
from rest_framework_simplejwt.views import TokenRefreshView, TokenBlacklistView
from .views import (
    TopicViewSet, QuestionViewSet, TestSessionViewSet, TestAnswerViewSet,
    StudentProfileViewSet, ReviewCommentViewSet, TimeTrackingViewSet,
    ChatSessionViewSet, ChatMemoryViewSet, chat_statistics,
    dashboard_analytics, dashboard_comprehensive_analytics, platform_test_analytics
)
from .views.utils import (
    clean_existing_questions, sync_topics_from_database_question, 
    sync_questions_from_database_question, sync_all_from_database_question,
    reset_questions_and_topics
)
from .views.test_views import (
    create_test_student, test_login, test_topic_classification,
    create_test_session, system_status
)
from .views.insights_views import (
    get_student_insights, get_topic_details, get_insights_config, get_insights_cache
)
from .views.task_status_view import task_status
from .views.google_auth_views import (
    google_auth, link_google_account, unlink_google_account
)
from .views.platform_test_views import (
    list_available_platform_tests, start_platform_test, get_platform_test_details
)
from .views.platform_admin_views import (
    dashboard_home, metrics_api, session_heartbeat
)
from .views.platform_admin_views import (
    platform_login, platform_logout, tests_list, tests_create, tests_edit, tests_delete
)
from .authentication import StudentTokenObtainPairView
from .views.password_reset_views import forgot_password, verify_reset_token, reset_password
from .views.payment_views import create_order_view, verify_payment_view, subscription_status_view
from .views.webhook_views import razorpay_webhook
from .views.debug_views import debug_echo
from .views.mobile_otp_views import send_otp, verify_otp

# Initialize DefaultRouter with default trailing_slash behavior (True)
# This will make all URLs generated by this router have a trailing slash
router = DefaultRouter()
router.register(r'topics', TopicViewSet, basename='topic')
router.register(r'questions', QuestionViewSet, basename='question')
router.register(r'test-sessions', TestSessionViewSet, basename='test-session')
router.register(r'test-answers', TestAnswerViewSet, basename='test-answer')
router.register(r'student-profile', StudentProfileViewSet, basename='student-profile')
router.register(r'students', StudentProfileViewSet, basename='students')  # For /students/me/ endpoint
router.register(r'review-comments', ReviewCommentViewSet, basename='review-comment')
router.register(r'time-tracking', TimeTrackingViewSet, basename='time-tracking')
router.register(r'chat-sessions', ChatSessionViewSet, basename='chat-session')
router.register(r'chat-memory', ChatMemoryViewSet, basename='chat-memory')


urlpatterns = [
    path('', include(router.urls)),
    path('topics/delete-all/', TopicViewSet.as_view({'delete': 'delete_all'}), name='topics-delete-all'),
    
    # JWT Authentication endpoints
    path('auth/login/', StudentTokenObtainPairView.as_view(), name='student-token-obtain-pair'),
    path('auth/refresh/', TokenRefreshView.as_view(), name='token-refresh'),
    path('auth/logout/', TokenBlacklistView.as_view(), name='token-blacklist'),
    
    # Google OAuth authentication endpoints
    path('auth/google/', google_auth, name='google-auth'),
    path('auth/google/link/', link_google_account, name='link-google-account'),
    path('auth/google/unlink/', unlink_google_account, name='unlink-google-account'),
    
    # Mobile OTP authentication endpoints
    path('auth/send-otp/', send_otp, name='auth-send-otp'),
    path('auth/verify-otp/', verify_otp, name='auth-verify-otp'),
    
    # Password reset endpoints
    path('auth/forgot-password/', forgot_password, name='forgot-password'),
    path('auth/verify-reset-token/', verify_reset_token, name='verify-reset-token'),
    path('auth/reset-password/', reset_password, name='reset-password'),
    
    # Payment endpoints
    path('payments/create-order/', create_order_view, name='create-order'),
    path('payments/verify-payment/', verify_payment_view, name='verify-payment'),
    path('payments/subscription-status/', subscription_status_view, name='subscription-status'),
    path('payments/webhook/razorpay/', razorpay_webhook, name='razorpay-webhook'),
    path('payments/debug-echo/', debug_echo, name='payments-debug-echo'),
    
    # Chatbot endpoints (additional to router)
    path('chatbot/statistics/', chat_statistics, name='chat-statistics'),
    
    # Dashboard endpoints
    path('dashboard/analytics/', dashboard_analytics, name='dashboard-analytics'),
    path('dashboard/comprehensive-analytics/', dashboard_comprehensive_analytics, name='dashboard-comprehensive-analytics'),
    path('dashboard/platform-test-analytics/', platform_test_analytics, name='platform-test-analytics'),
    
    # PostgreSQL-based sync endpoints (new)
    path('dashboard/sync-topics/', sync_topics_from_database_question, name='sync-topics-from-database-question'),
    path('dashboard/sync-questions/', sync_questions_from_database_question, name='sync-questions-from-database-question'),
    path('dashboard/sync-all/', sync_all_from_database_question, name='sync-all-from-database-question'),
    path('dashboard/reset-data/', reset_questions_and_topics, name='reset-questions-and-topics'),
    path('dashboard/clean-existing-questions/', clean_existing_questions, name='clean-existing-questions'),
    
    # Test endpoints for new authentication system
    path('test/create-student/', create_test_student, name='test-create-student'),
    path('test/login/', test_login, name='test-login'),
    path('test/classify-topics/', test_topic_classification, name='test-classify-topics'),
    path('test/create-session/', create_test_session, name='test-create-session'),
    path('test/status/', system_status, name='test-status'),
    
    # Insights endpoints for student performance analysis
    path('insights/student/', get_student_insights, name='student-insights'),
    path('insights/cache/', get_insights_cache, name='insights-cache'),
    path('insights/topics/', get_topic_details, name='topic-details'),
    path('insights/config/', get_insights_config, name='insights-config'),
    # Celery task status endpoint
    path('tasks/status/<str:task_id>/', task_status, name='task-status'),
    
    # Platform Test endpoints for scheduled/open tests
    path('platform-tests/available/', list_available_platform_tests, name='list-available-platform-tests'),
    path('platform-tests/<int:test_id>/', get_platform_test_details, name='platform-test-details'),
    path('platform-tests/<int:test_id>/start/', start_platform_test, name='start-platform-test'),
    # Platform admin UI and metrics
    path('platform-admin/', dashboard_home, name='platform-admin-home'),
    path('platform-admin/api/metrics/', metrics_api, name='platform-admin-metrics-api'),
    path('platform-admin/api/sessions/<int:pk>/heartbeat/', session_heartbeat, name='platform-admin-session-heartbeat'),
    # new platform-admin auth and UI
    path('platform-admin/login/', platform_login, name='platform-admin-login'),
    path('platform-admin/logout/', platform_logout, name='platform-admin-logout'),
    path('platform-admin/tests/', tests_list, name='platform-admin-tests-list'),
    path('platform-admin/tests/create/', tests_create, name='platform-admin-tests-create'),
    path('platform-admin/tests/<int:pk>/edit/', tests_edit, name='platform-admin-tests-edit'),
    path('platform-admin/tests/<int:pk>/delete/', tests_delete, name='platform-admin-tests-delete'),
    
    # Payment endpoints
    path('payments/create-order/', create_order_view, name='create-order'),
    path('payments/verify-payment/', verify_payment_view, name='verify-payment'),
    path('payments/subscription-status/', subscription_status_view, name='subscription-status'),
]